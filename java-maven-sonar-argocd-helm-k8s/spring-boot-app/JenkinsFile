pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '-v /var/run/docker.sock:/var/run/docker.sock -w /workspace'
        }
    }
  stages {
    stage('Checkout') {
      steps {
        bat 'echo passed'
        //git branch: 'main', url: 'https://github.com/aayushparikh22/my-first-pipeline.git'
      }
    }
    stage('Build and Test') {
      steps {
        bat 'dir'
        bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://localhost:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=%SONAR_URL%'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "aayushparikh/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && docker build -t %DOCKER_IMAGE% .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "my-first-pipeline"
        GIT_USER_NAME = "aayushparikh22"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          bat '''
            git config user.email "aayushparikh0000@gmail.com"
            git config user.name "aayushparikh22"
            set BUILD_NUMBER=${BUILD_NUMBER}
            powershell -Command "(Get-Content java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml) -replace 'replaceImageTag', '$BUILD_NUMBER' | Set-Content java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml"
            git add java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://%GITHUB_TOKEN%@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
